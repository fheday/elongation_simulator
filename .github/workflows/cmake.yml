name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  build_wheels:
    name: Build wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, arch: x86_64}
          - {os: windows-latest, arch: AMD64}
          - {os: macos-latest, arch: ARM64}
  #build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
   # runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Checkout submodules
      run: git submodule update --init --recursive

    #- name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #  run: pip install pybind11[global] && cd src && cmake -B ${{github.workspace}}/build -Dpybind11_DIR=`pybind11-config --cmake` -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    #- name: Build
      # Build your program with the given configuration
      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  # Execute tests defined by the CMake configuration.  
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22.0
      env:
        CIBW_ARCHS: "${{ matrix.arch }}"
        CIBW_PRERELEASE_PYTHONS: True

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl
