name: Build

on: 
     release:
       types:
         - published
env:
  BUILD_TYPE: Release
  CIBW_ARCHS_MACOS: x86_64 arm64 

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, arch: x86_64}
          - {os: windows-latest, arch: AMD64} 
    environment:
      name: pypi
      #      url: https://pypi.org/project/elongation-simulators
    permissions:
      contents: read
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4
        with:
          repository: fheday/elongation_simulators

      #- name: Checkout submodules
        #  run: git submodule update --init --recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        # to supply options, put them in 'env', like:
        env:
          # CIBW_SOME_OPTION: value
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_PRERELEASE_PYTHONS: True


      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  upload_pypi:
    environment:
      name: pypi
      #      url: https://pypi.org/project/elongation-simulators
    permissions:
      contents: read
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2.2.0
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          draft: false
